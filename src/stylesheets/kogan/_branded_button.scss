
$button_padding: 15px;
$button_font_size: 1.15rem;
$disabled_input_color: gainsboro;
$primary_color: $koganRed;
$border_width: 3px;
$button_radius: 6px;
$text_color: #333333;
$grid_gutter: 12px;
$grid_gutter_half: 6px;
$heading_1_size: 2rem;

@mixin branded_button_style() {
  cursor: pointer;
  display: inline-block;
  padding: $button_padding;
  font-size: $button_font_size;
  text-align: left;
  position: relative;
  color: $text_color;
  background: #fff;
  border: $border_width solid $primary_color;
  border-radius: $button_radius;
  box-sizing: border-box;
  &:hover {
    &:before {
      width: 100.5%;
      padding-left: $button_padding;
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 60px);
      @include mq($from: tablet) {
        padding-left: $button_padding;
        font-size: $button_font_size;
      }
    }
  }
  &[disabled] {
    border-color: $disabled_input_color;
    &:after,
    &:before {
      background-color: $disabled_input_color;
      padding-left: $button_padding;
      @include mq($from: tablet) {
        font-size: $button_font_size;
      }
    }
    &:after {
      display: none;
    }
    i {
      color: #fff;
    }
    .kgnIcon {
      color: #fff;
      background-color: #fff;

      &:before, &:after {
        background-color: #fff;
      }
    }
  }
  &:before,
  &:after {
    padding: $button_padding;
    box-sizing: border-box;
    font-size: $button_font_size;
    clip-path: polygon(0 0, 100% 0, 95% 100%, 0 100%);
    white-space: nowrap;
    display: block;
    overflow: hidden;
    position: absolute;
    top: -1px;
    left: 0;
    z-index: 2;
    transition: width 0.25s ease, clip-path 0.25s ease-out, padding 0.5s ease;
    @include mq($from: tablet) {
      clip-path: polygon(0 0, 100% 0, 90% 100%, 0 60px);
      padding: $button_padding;
    }
  }

  &:before {
    content: attr(data-text-before);
    height: 105%; // had to fix this weird 1px gap on mobile responsive
    background-color: $koganRed;
    transition: 0.25s ease;
    color: #fff;
    width: calc(100% - 55px);
  }
  &:after {
    content: attr(data-text-after);
  }
}


/* Use only with IE browsers */
.svgClipped {
  position: absolute;
  top: 0;
  right: 0;
  fill: $koganRed;
  clip-path: url("#anglePath");
  -ms-clip-path: url(#anglePath);
  button[disabled] &{
    fill: $disabled_input_color;
  }
}

.kogan-button-loading {
  .svgStyleBlock {
    display: none;
    visibility: hidden;
  }
}

 /* Use only with IE browsers */
 .svgStyleBlock {
  position: absolute;
  width: 95%;
  height: 100%;
  top: 0;
  left: -30px;
  z-index: 1;
  transition: left 0.25s ease-in;
}

.kogan-button {
  width: 100%;
  @include branded_button_style();
  &.isLoading {
    color: transparent;
    border-color: transparent;
    background-color: white;
    .loadingIcon {
      background-color: transparent;
    }
    &:after,
    &:before {
      display: none;
    }
  }
  @include mq($from: tablet) {
    padding-left: $grid_gutter_half;
  }

  &.ieFix {
    &:before {
      width: 75%;
      @include mq($from: tablet) {
        width: 70%;
      }
    }
  }
  &.edgeFix {
    overflow: hidden;
  }

  &:hover {
    .kgnIcon {
      color: #fff;
      background-color: #fff;

      &::before,
      &::after {
        background: #fff;
      }
    }
    .svgStyleBlock {
      left: 100px;
    }
  }
}

.kgnIcon {
  color: $primary_color;
  position: absolute;
  z-index: 5;
  right: 18px;
  top: 22.5px;
  font-size: $heading_1_size;
  transition: color 0.25s ease;
  /* Fix flickering webkit bug */
  -webkit-backface-visibility: hidden;
  -webkit-transform: scale(1);
}

.kgn-icon-arrow-right:before {
  content: "âž¡";
}

.btn-centered {
  display: block;
  margin: auto;
}

.btn-bold {
  font-weight: 600;
}

.kogan-join-now {
  width: 200px;
  height: 80%;
}

.arrow {
  background: red;
  color: red;
  height: 3px;
  width: 22px;

  &:before,
  &:after {
    content: "";
    background: red;
    position: absolute;
    height: 3px;
    width: 10px;

    &:hover {
      background: #fff;
    }
  }

  &:before {
    right: -3px;
    bottom: -3px;
    transform: rotate(-45deg);
  }

  &:after {
    right: -3px;
    top: -3px;
    transform: rotate(45deg);
  }
}
